function MetrikaPrototype(){var e=this;e.fireEvent=function(e){console.warn("["+e+"] You should provide counter id to use Yandex metrika events")},e.hit=function(e,n){console.warn("["+e+"] You should provide counter id to use Yandex metrika events")}}function Metrika(){function e(){if(!counterConfig.id)return void console.warn("You should provide counter id to use Yandex metrika counter");var e="yandex_metrika_callbacks";window[e]=window[e]||[],window[e].push(function(){try{window[o.counterName]=new Ya.Metrika(counterConfig)}catch(e){}});var n=document.getElementsByTagName("script")[0],t=document.createElement("script"),r=function(){n.parentNode.insertBefore(t,n)};return t.type="text/javascript",t.async=!0,t.src="https://mc.yandex.ru/metrika/watch.js","[object Opera]"==window.opera?document.addEventListener("DOMContentLoaded",r,!1):r(),e}function n(e){window[o.counterName]&&window[o.counterName].reachGoal?window[o.counterName].reachGoal(e):console.warn("Event with type ["+e+"] can't be fired because counter is still loading")}function t(e,n){window[o.counterName]&&window[o.counterName].reachGoal?window[o.counterName].hit(e,n):console.warn("Hit for page ["+e+"] can't be fired because counter is still loading")}var o=this;o.counterName="yaCounter"+counterConfig.id,o.$insertMetrika=e,counterConfig.id&&(o.fireEvent=n,o.hit=t)}function MetrikaProvider(){return{configureCounter:function(e){angular.extend(counterConfig,e)},$get:function(){return new Metrika}}}var counterConfig={clickmap:!0,trackLinks:!0,accurateTrackBounce:!0,webvisor:!1,trackHash:!0,ut:"noindex"};Metrika.prototype=MetrikaPrototype;var module=angular.module("yandex-metrika",[]);module.provider("$metrika",MetrikaProvider),module.run(["$metrika",function(e){e.$insertMetrika()}]);